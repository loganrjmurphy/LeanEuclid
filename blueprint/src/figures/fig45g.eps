%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.94a Copyright 2003 Radical Eye Software
%%Title: tmp.dvi
%%BoundingBox: 148 255 449 671
%%DocumentFonts: GreekGaramond
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E tmp -o a45.eps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.09.14:1228
%%BeginProcSet: texc.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: GreekGaramond
%!PS-AdobeFont-1.0: Greek-garamond Carmelo Lupini
%%CreationDate: Wed Oct 31 21:01:29 2001
% Converted from TrueType font 'gr_gar.ttf' by ttf2pt1 program
%
% Attention: Font was renamed to the new fontname 'GreekGaramond'
% This name was choosen only for identification purpose, the trademarks of
% any third parties or other rights are fully recognized.
%
%%EndComments
12 dict begin
/FontInfo 9 dict dup begin
/version (1.0) readonly def
/Notice (Carmelo Lupini) readonly def
/FullName (GreekGaramond) readonly def
/FamilyName (GreekGaramond) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.000000 def
/isFixedPitch false def
/UnderlinePosition -91 def
/UnderlineThickness 24 def
end readonly def
/FontName /GreekGaramond def
/PaintType 0 def
/StrokeWidth 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox {-60 -307 958 818} readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /Alpha put
dup 66 /Beta put
dup 68 /Delta put
dup 69 /Epsilon put
dup 71 /Gamma put
dup 72 /Eta put
dup 75 /Kappa put
dup 76 /Lambda put
dup 77 /Mu put
dup 81 /Theta put
dup 90 /Zeta put
readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC1325EB8F274DD24A5D21C056364
13EFC099729365596A8A52075A624087116520034680FDBD3E86220CBF46C2E8
2BA32413E26C0AE960BB760BE98B2E1348D6A21CDB5429260899F7FF77617B00
E876499AFB997425D58673778E90672CE2F26C816F6EF6C1F6F0724D575749C5
5AE9D8CD0337709436E75CF2354AFBA7974814727450620BF79E10457E31E899
430F90AC9865F70FE6B6777C3B647DBF5479B987AFBD6DBAEA380CEC42950CA1
9398EFFA5484638A9508BECCE14A924207B97E5AF234858A214668407E3B1C24
BDA1103B502633B31ED5A3B939F021EA212882224F14BAF19AC98252F87DA621
BAD7A76149EE69C15EDBA1C4D03B2602F676C2E97E1F6A9CD9626A4E17789C3B
8B0AF1E959EA3595B7AD243F35DE25A969AF7436337B94F29464D3A269AFD120
ECF30CED221EB888BAE5B3AE1D67791A4290CA454B8C589673B09D91A1A2313C
0084F51258731A5F85BF85B31463EB8128F8DDFFC26AFD15C4DF23F2F5D94224
2710FFB4D8F39D212D011C0921DF33F9075DE91959F7E0508CA15330FE36E3B9
429DCD8C4AB86AD92441FAEB8A84C1FF068C8773FA861FA6317D2DC6E70AF77D
9B1B3F53E048AC7295DE53BDA938C85346519B70BC5EC12E67E0F82072F07940
39D882D6EAC332B9BCB99506776F93F69C855F72E914D3E962B9E64D8A64A448
733BCEBEF9452313CF049EFBECCA2B266452FBF2D9D7DE9AF0A0DBD5145F0FAE
A9283059083F5E07E64B777BD10A5624795434AF91E01B0D458DCE016F177338
7D9D4D851DA35F950F6FC1C0CC9A10F8E5DC9AF1548BD397356643DA74D1F885
F056FD4B24995E1758394F70D7D0D7A7F621D1B9639E85D7C0A2571062493942
C21F78C8B10B5B00DC2A8CCA94A526977CEF74CBB19178A4C59FDAC1DF654ED2
AF5DFE7D1D7ED603CFDD5A28BF8922EFB42A198F1E997A51F3D48184825B25DB
AB77EB243D98575F15301FA54C890355C7A86711780887938FE569C47F7026B7
F85F4E0749E6E8BC4F489B3BBCE2F054A528A251F35AB37BE5D7A8760A255CEF
49913DE74D55B71337511635DADCB16C920051D7FC7C18A28AE477175C598A03
93F44425D7C34C220BC2BB053CADED377D4CB4DE99A1C454F9B8212087D8CBF8
EE3305C1373CBBCA847523476744EF628B884E36B378512801B5DF3A5D36FC4F
43A5343E3F7BCB2816442CFF2FFFDFA6637D5FF05619A1B2B8DD8BDF9148BD91
625C3A1EF71C89DA19F4D1DAF193346037FAA2B2495150EEDA831270565880D2
6B3140E55F642113E012E36A7A8DD524EEE78A9130A3424CE071F88C0F0BE19D
A892430C7EC2223FADC37F43C7E27C42ABFB407EB48FC4C1816970D54C959CFF
E6417460FC6EC3804F8F5819FFABE0C5290CF5191BD7E139E8E09506E3637929
72427C22A31E54FFAFD5B41601C3398A247D017B3F7BCF87B4C3987A70085AE5
F6F7331660B1CF9773DF4D22848A6CC6334EB4E37EA4BCDE3230BB9D42D13BB5
91AB7CCB6DAFB0D6AD6E67450B49C1807D0A5EB99D5CEA775BD709DEF52B89BE
23A2FCDC75376D001736E42ACAF05B178DEBEC3363F636CBD7CE62DAB4789DD6
8DA2A017B3DF5729FA073722284F04CB2B94A230B1428F7BECF75E161F199321
05B2C6391C586A2755ED68029F41D9F629C99B59A7C30CE17ACA5570DE51E12E
0BEE4EC0E8A9A607308DA120D2DD1E513849640CE0C258E09B113470E7F7F1EC
2C1A3F2EE78B2E69217C4F28E9B0874A5160C2158252A5D4C2DB26B72D8D6708
18B628996A10B90885451AF4CE5357304E2A62F66C2EB8DAD38DC12C7395AEB3
207A346A200B7E2853CF7E4982ACAB9D0B4EEB87C1F16DD0F6D5C9938B863901
13BF944E37C8A91BCAD36EA6440F59FEB3498B2B2B849B03613D047E8AF4A869
D84D2BE48BDA648E03A0EC960A9BA26EFC40C3FE311171C365322B00CE690D43
70744A8C5B588508E3B9CEAAF9696EE9DEAC660AD69638F84DC37BE6FF372AE4
D749CAA57D5354FB7766A35590BDC2215176681E5DC99CEEF70C10B408D81422
C608C019EEB81431E15EE0B9AEFC8F7FD6A2B2E5F75C68436CE0C95DE25F1112
6C16F9AC6698AC150C8A3FF966198E09720531229A799075AD954260F394C4C8
430BBD1FB163E82CF8C33ABB2E6014DA41C7DA712502050AD054EEADCD7FC647
315066441CA45E68DA609E51F80A4F1774C622EE8188AA8B07AD264B103B452E
90143DF3D80B1BD021220984F68692E1509C9E94AEB96B4B6283DE28107D3B57
69E6EE1C2C8FCB755CEDFB7B74ED4C634E51E6182248E49B2104D59536C562D8
D3CA117909E58F6A4A346DA7E19022297FC39BBE259FAC1226FEE478DAE33C7E
77C866ED84322F041B49753873C06DEAC97CD42FDAD6C1CE5C4DBAF61B72ADBC
070BF9EEF185D0C8D520891AE070CBC49B0948E8D76F02993B9C6961DF091FDB
55769C5C755175FFBCB007792A3594DFB2DDF354238BD2259E6B3869FEFE9057
5E5344AB33A57F4AB0B89B2D1BF5323E7A01435815CB4CF04DD23FCF1D434E64
8C8B3377DB57BFC630B91B01C1B96303E58AD086B4DC7E8EFFBBAEA3EB1C8696
A8E13C1C98AC0021D3F6D1A5449D5ACC4F03E7A5EDBFB3CC9869F5BE7F7CB8CF
A9A58E91D6E5FD454E6B5BC7BCA1B94E507A9C91BD2A32E8AEC0D91A35B67D2A
FA2F54D44A7C815F69F9F586854F9F4D9BFF31C06E2CC31E929C1D65F79D1DCB
618D901A30F400BB27505B17A7B71149CE03644A0221DE1F58779C4FB3DB8C28
2BC39546E06D89188C1160B0F0641B3CA0EE386AA77CC5D2884D1D72A0D9FA9F
D07A2C5F0AF6288F16D3EDADDBF9A9826EFD61F6F3F17ED3EDF8D99D9E39BDD3
69EF18EDC89B7554DE2048B48128300109337F1F9DFF09CFDECE7A6C6269326B
30714BB849DF33A49B8600CA7BAAAA548D354F320D9CE1DEB3DB3A3E71C83977
1CC179AE3CF0E057F3CC383EAF665B012065073BDE6C4AADAC35B3880B13A972
8B318ADDA73B071F7010B8079128516E27D10769EE77D324FAF04D4B6D2AC36C
D4599771CDD7725E5B308CEEE3C8565F4C8DA46F122A571E91AEB8ACF45EF73E
7192DA9037198BCAF096E301A72F4D31C2A356D97D0D257C15077DB4B3D503F3
878D8B7D377A7CDE50B76F0203C7385CF79D994A114EDB6A2D550A2009363EFC
F355E6038F0B49B3AED2A45B916135DC4B9D54C410507F071BCF125A9E893E98
20B8927F01B34CE0C01BEEA7E95CEB58B7F4960DB3E3E64C9958FA6B889B1FA3
5463068896B80EB874066BDCA43924DE0339D3EC819AC22994F4A14C40E933A6
1B5B8E481DAE0C889A234A597DD9F36582654893C221419C96D9378ECFBD9B4A
7F2906BC6365DB5788F1418618515131C0D0B34731E07F64CD95C17ACC07F054
9E30507722515A0B2FB96EFAC923D1B4BCBEA27098D0511EBCD0FCBDADF44EE6
3552B3C3BED517B1AF19A5D6F8FB99F45E411008F1F89B72532294B1090CE79B
45D16CD53C8020A1DA32CAB01329876B23E0B14B87A750101F47DC2D14BEE06D
BD174B48527D6C418B2BF75E06F046488D2A9424AA5635FD9E1552C6DBEF30FD
935A5A23EFC3548E9D935CFA8765584254F54694246E4332ABEB2478871540B2
0D012B7CC197A10C2B507FC0DAA4BBCED7E06CCF3676266EE432C5A43FD36EBE
9F4DE3494384F0637A8415E992CB224594139A3F5C07EE6FF0B9D35814C10E9C
C0B3699BF54A8C78793C8325E4E02D44B65812DE4F5D9988A4ECAB226801FE9A
61B295F97A75A588031E099CADAC74B731E7680147E1D9C028D0C2C4499D30B6
8092D01457ABBF916430F3565473C63F3A0CE808DB7F509A4258D42C1AC38D29
88FF7C4B065088682149845A7BFDF923A8B211A064217B91BE14638AEC6259ED
4C167AD21F02FD8D48FB4AB948988EEBEEE57F4A0525FF80CEAD286972EC9C23
AFF7985EFC536E7A4147A014363EC7522B61923D1E78775C8C006F2F77198EB4
95478E11706694313BFE1FBC66066FE4D7D92F4F46F597A3CAAEBED5BCB7212E
3ACE0DB997BB313B22198C744C0FA2B199F4792E8ACA1640181849DCD59F2E8A
88C2E38D53CF2A88CECEFDB93D5E2AD7131B26E9BEB9280A59C86515541B92E9
D1216AAB957A1B87D4136A050694B395BEEC97950B0D4E7C61B6465283EA059B
7D57849DF82464ACC2CABC975F79C74D8E252FBC24DF92188A2A240B4D88BA91
392B0CE55D09A3E3621DF1F0FA6B1754A67AEF2CCEAB8EDC82A1DDF2C1D8E808
F4A5F14A1F4B7B884919ED34D7C0C8DCF2C10B695B4037BE80D37CB18A0AC38C
99723D7FA267E07070A92D6B85C159168904C957C9E7324031D9E30C9420BEF6
B8CEC861E40150AE71B2802168FF752F8D9E549B02EE0E4EF720781DA3342F69
C433DCDE590C99C45A7DBDBAD48F673EF46643045BD9D50EE997D77E95FD3F7D
0BA86B177D60709FC2510627226AF97A66C98C4DD40C1BE19CF633BDEC0A0A35
93823555CCE2888CE34E2473A1F965C0DB5F9CD384B86681D2C4D5B512990231
7CEDEED6DAE1270130BEFBB6F17E8DE96E123409FD7A515E8167BB597D0EF960
E2C1EE4A2A27706684BC66B7326A504830AF9D101C9E85D95CA92D9918F06752
161C27827FBD1ED3589431D4AFF8F7AEA3FA8AFBA97126B468E80D0113814EF2
312F98C7A693CA726DC8A0DD5FB61F043804A4493759B97B1E282971F9673491
FF9C3D9598041EEC5E4D8E53399724BCA36B82BBEDE7AF7BE4EC3B452246A7BD
5982D330974FC0650B09AAA0688BB66AB8B99CF14D26D9036DDF8A39E60503BF
B8DBFEE7734AF8F03B56A86E10F1D5B407DF2ADD8D276A67114A7C6CA771E289
6A6ECAB90CA3F49DF12968C714694B65C4F2B602F97FE5F666C1EE699E5D1A65
5F8C162C5285C8E1C8B36ADDE58133E94A7746A7396991D5D45B73A9C617624E
B8BE111972172BBBF663A324AA710BABC218F31CC59D33EFF358FFCCA61B62A6
3114D85A18CA8673A422D552017A5E907B94AF2BEAC2CE840DE94A42D10BB71A
17B5E4DE0125ECDD7A059B1A8465B1657DDC5A018F63F306D093C98190C2F091
95C5868E3EC8575608993541F97713BC2665D2F48BFE234AC9FD38B8AE35B8DE
5C262196FD429D30BEEA472B031290A7A96815EEDDF14C3D3B8DB93E43BADCCE
6A52EF664B953AF337776890E3F4F42105043D2D03814D812A7362222E104071
604361C7818D21AB2E8169F7945AAEBE226E98B34191378FF93422D0F2799B89
8289038AA11B0B469EBCCD22824A65F2F261D953B2149E9EBBC7D334632AE60F
24A18CAB80ED576A889C8180F83C772C86B9DE44F45B306B9470BB1CA952CF60
DBC1F23EB6226E1150A2C5A16D9C9E56CAC5AA7018CB4C3FB1189A1C06FD328C
6EDEAE1EEE5E099CBFE7C3BEDDA9044F473CFA31EEBF8A58DC2FE0717B13DD53
3A485796EFFA9ABFA8C5F8FFF1013040A7BBB943E3026BBE31A5181D61DA8BB8
66C4400447622A2CFE5609E1E8DE14A8929AA60FF66FBC2776417A83B2E3C7DC
98E4D8EE9C18FFD12D0B77CBFA23F6D6C9FDEE11DAB68D1C2ECBE7536ADD799F
D8DE68800273C0ADEBA3CCEF18448E8C42401AD3690B2056A94F3836AFC5582D
5BA6F4D4930FF82462EF032B72FF196372D6F9BDA6F019F0C0BEA44777644355
913FDE36CACE5EBA8BA3543FD0E2EA18B0389F620E7C74B690A6089BF593C60E
10644356F42DB1A1AC72DF10BE0930B64E22EA2AFFACFD7A460FC78CD8C77723
DBE58364A71DFEEFD485DCBBDA6457AC4E8E9F04DFB2A760E675465C6274F110
0DC20AF1D1AA7F87090B57726587DE56AF0DEB7006260381EBDD0FE329FA2C04
0D7862ABC4C3E4BFA47DDB201CE1D8427632B584031E5FEFBE6A26CD2D5B8EE1
FB7AE351C4DCE2442F42699C3AB5B39D696983FF415957B3AB7FA47908ABAEC6
31FA2C88C5DC8084ED83FDF4C209397DB0F1226D6C0E5CE7AFEA9938AA44F31E
EB79439C338A18845DB582F5B17520FBF8C75510DF2498EEA7A9151DD3FEB6C4
86EB4270
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (tmp.dvi)
@start /Fa 165[158 8[188 3[201 163 178 2[183 138 1[158
150 1[148 163 65[{}11 207.555 /GreekGaramond rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop Black Black 639 3868 a @beginspecial
0 @llx 0 @lly 299 @urx 412 @ury 2990 @rwi @setspecial
%%BeginDocument: tmpfig.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: a45.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Sep 14 12:28:41 2005
%%For: rfitzp@milou.ph.utexas.edu (Richard Fitzpatrick)
%%BoundingBox: 0 0 299 412
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 412 moveto 0 0 lineto 299 0 lineto 299 412 lineto closepath clip newpath
-99.0 490.5 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
15.000 slw
n 5175 1650 m
 4575 4500 l gs col0 s gr 
% Polyline
n 1800 7800 m 4500 7800 l 5100 5400 l 2400 5400 l
 cp gs col0 s gr 
% Polyline
n 3600 7800 m
 4200 5400 l gs col0 s gr 
% Polyline
n 6600 3675 m 5775 4500 l
 6525 5100 l gs col0 s gr 
% Polyline
n 2550 3525 m 5175 1650 l 6000 2700 l 4575 4500 l
 cp gs col0 s gr 
% here ends figure;
$F2psEnd
rs
showpage

%%EndDocument
 @endspecial 0 0 0 TeXcolorrgb 2327 2443 a Fa(L)p Black
0 0 0 TeXcolorrgb 2889 2068 a(E)p Black 0 0 0 TeXcolorrgb
2852 1205 a(G)p Black 0 0 0 TeXcolorrgb 2364 568 a(D)p
Black 0 0 0 TeXcolorrgb 939 1618 a(A)p Black 0 0 0 TeXcolorrgb
2064 2218 a(B)p Black 0 0 0 TeXcolorrgb 1839 2443 a(H)p
Black 0 0 0 TeXcolorrgb 639 3868 a(K)p Black 0 0 0 TeXcolorrgb
722 w(Q)p Black 0 0 0 TeXcolorrgb 262 w(M)p Black 0 0 0
TeXcolorrgb 939 2443 a(Z)p Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
